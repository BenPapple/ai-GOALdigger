use "../goaldiggerProlog" as knowledge.
use "../goaldiggerAction" as actionspec.

/**
 * Manages Manhattan targets
 *
 */
 
module manageManhattanTarget {

	% when role default store first seen RoleZone coordinates as targetMd
	if percept(roleZone(X, Y), role(default)), bel(agentAt(X2, Y2), targetMd(X4, Y4, Target), localize(X, Y, X2, Y2, X3, Y3)), not(bel(executeManhattan)) then 
		delete(targetMd(X4, Y4, Target)) + insert(targetMd(X3, Y3, rolezone)) + insert(executeManhattan).
		
	% when role worker and without block set dispenser as target
	if percept(step(SimStep), role(worker)), bel(haveBlockAttached(false,_), currentChosenTask(_, TaskStep, _, _, _, BlockType), TaskStep >= SimStep, 
		targetDispenserAt(AltX, AltY, AltBlockType, _), BlockType == AltBlockType) 
			then {
				if bel(targetMd(X4, Y4, Target)) then delete(targetMd(X4, Y4, Target)) + insert(targetMd(AltX, AltY, dispenser)).	
				if not(bel(executeManhattan)) then insert(executeManhattan).
				}
		
	% With block update goalzone target MD
	if bel(haveBlockAttached(true, _), targetMd(X, Y, Target), targetClosestGoalZone(A, B, MdAlt), MdAlt < 1234567) then delete(targetMd(X, Y, Target)) + insert(targetMd(A, B, goalzone)) 
		+ insert(executeManhattan).
		
} % end module