use "../goaldiggerProlog" as knowledge.
use "../goaldiggerAction" as actionspec.
use helperManhattanChoice as module.
use executeRandomMove as module.
use "../actionhandling/preActionCleanup" as module.

module executeExploreMove {

	% If there is no explored Mark north and not 3 adjentet rows left and right, the agent will head north
	if bel(agentAt(X, Y, _), exploredMark(ExploredX, ExploredY), DX is X - ExploredX, DY is Y - ExploredY,
	       not(DY < 0),not(DY > -3), not(DX < 3), not(DX > -3)) then preActionCleanup + move(n) + print("Explored!").
	       
	if bel(agentAt(X, Y, _), exploredMark(ExploredX, ExploredY), DX is X - ExploredX, DY is Y - ExploredY,
	       not(DX > 0), not(DX < 3), not(DY < 3), not(DY > -3)) then preActionCleanup + move(e) + print("Explored!").
	       
	if bel(agentAt(X, Y, _), exploredMark(ExploredX, ExploredY), DX is X - ExploredX, DY is Y - ExploredY,
	       not(DY > 0), not(DY < 3), not(DX < 3), not(DX > -3)) then preActionCleanup + move(s) + print("Explored!").
	       
	if bel(agentAt(X, Y, _), exploredMark(ExploredX, ExploredY), DX is X - ExploredX, DY is Y - ExploredY,
	       not(DX > 0), not(DX < 3), not(DY < 3), not(DY > -3)) then preActionCleanup + move(w) + print("Explored!").
	
	if true then executeRandomMove + print("Not Explored!").
	       
	 
	
}