use "../goaldiggerProlog" as knowledge.
use "../goaldiggerAction" as actionspec.

/**
 * Rotate logic clearing block/obstacles at rotate target and then rotates
 *
 */

module rotateBlock {

	 % rotate random if block in affinity direction
	 if  bel(haveBlockAttached(true, DirBlock), directionToCoordinate(DirBlock, A, B)), percept(thing(A, B, block, _)), 
	 bel(randomAffinity(Dir), DirBlock == Dir, randomRotate(Rot), oppositeRotate(Rot, AltRot), rotateToCoord(DirBlock, Rot, X, Y), rotateToCoord(DirBlock, AltRot, F, G)) then {
	 
	 	 % rotate if free
		 if not(percept(thing(X, Y, obstacle, _))), not(percept(thing(X, Y, block, _))), not(percept(thing(X, Y, entity, _))) then rotate(Rot)+ delete(haveMove(false)) + insert(haveMove(true)).
		 if not(percept(thing(F, G, obstacle, _))), not(percept(thing(F, G, block, _))), not(percept(thing(F, G, entity, _))) then rotate(AltRot)+ delete(haveMove(false)) + insert(haveMove(true)).
		 % clear blocked rotate targets
		 if percept(thing(X, Y, obstacle, _)) then clear(X, Y) + delete(haveMove(false)) + insert(haveMove(true)).
		 if percept(thing(X, Y, block, _)) then clear(X, Y) + delete(haveMove(false)) + insert(haveMove(true)).
		 if percept(thing(F, G, obstacle, _)) then clear(F, G) + delete(haveMove(false)) + insert(haveMove(true)).
		 if percept(thing(F, G, block, _)) then clear(F, G) + delete(haveMove(false)) + insert(haveMove(true)).
	 	
	 } % if rotate random

	 % rotate random if block 90 degree to affinity direction
	 if  bel(haveBlockAttached(true, DirBlock), directionToCoordinate(DirBlock, A, B)), percept(thing(A, B, block, _)), 
	 bel(randomAffinity(Dir),oppositeDirection(Dir, DirOppo), DirBlock \= Dir, DirBlock \= DirOppo, rotateAgainstAffinity(Dir, DirBlock, Rot), rotateToCoord(DirBlock, Rot, X, Y)) then {
	 
		 if not(percept(thing(X, Y, obstacle, _))), not(percept(thing(X, Y, block, _))), not(percept(thing(X, Y, entity, _))) then rotate(Rot)+ delete(haveMove(false)) + insert(haveMove(true)).
		 if percept(thing(X, Y, obstacle, _)) then clear(X, Y) + delete(haveMove(false)) + insert(haveMove(true)).
		 if percept(thing(X, Y, block, _)) then clear(X, Y) + delete(haveMove(false)) + insert(haveMove(true)).

	} % rotate random if block 90 degree
	
	if true then skip + delete(haveMove(false)) + insert(haveMove(true)).  
	
} % module