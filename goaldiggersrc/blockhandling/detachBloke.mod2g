use "../goaldiggerProlog" as knowledge.
use "../goaldiggerAction" as actionspec.

/**
 * ToDo Isaac
 *
 * @author Isaac S.
 */

module detachBloke {

	% ToDo: Reset belief if attached for a long time (with counter).
	
	% detach a bloke during dragger routine
	
	%if bel(customRole(customRoleSaboteur)) then allother.send(mensaje("Trying to detach")).
	if bel(customRole(customRoleSaboteur), whitelistedTeam(OurTeam)), 
	   percept(attached(X,Y), thing(X,Y, entity, OtherTeam), OurTeam \= OtherTeam), not(bel(X =:= 0, Y =:=0)),
	   bel(directionToCoordinate(Dir, X, Y)) 
	    then detach(Dir).
	
	% detach a bloke if directly attached to yourself
	if percept(attached(0,0), thing(X, Y, entity, _), abs(X) =< 1, abs(Y) =< 1), 
	   bel(directionToCoordinate(Dir, X, Y)) 
	    then detach(Dir).

% ToDo check logic	
%	% detach a block if it has a saboteur from other team attached to it
%	if percept(attached(X,Y), (abs(X) =:= 0; abs(Y) =:= 0), thing(X, Y, block, _), team(MyTeam),
%	   attached(X1,Y1), thing(X1, Y1, entity, OtherTeam), (X1 is X+1; X1 is X-1, Y1 is Y+1; Y1 is Y-1),
%	   OtherTeam \= MyTeam), 
%	   bel(directionToCoordinate(Dir, X, Y)) 
%	    then detach(Dir).
	
}