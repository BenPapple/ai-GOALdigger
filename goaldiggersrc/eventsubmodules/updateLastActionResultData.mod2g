use "../goaldiggerProlog" as knowledge.
use "../goaldiggerAction" as actionspec.

/**
 * Handles field lastActionResult from percept and alters belief accordingly
 *
 */

module updateLastActionResultData {

	% Managing action partial_success action messages
	forall percept(lastActionResult(partial_success)) do {	
		% single move instead of two
		if percept(lastAction(move), lastActionParams([D, _])) then {
			% update agent XY position with confirmed move nswe
			if bel(agentAt(X, Y), transformXYD(D, X, Y, X2, Y2)) then delete(agentAt(X, Y)) + insert(agentAt(X2, Y2)).
			}
	} % lastaction partial_success		

	% managing action success percepts
	forall percept(lastActionResult(success)) do {
	
		% update XY position of agent
		
		% single move
		if percept(lastAction(move), lastActionParams([D])) then {
			% update agent XY position with confirmed move nswe
			if bel(agentAt(X, Y), transformXYD(D, X, Y, X2, Y2)) then delete(agentAt(X, Y)) + insert(agentAt(X2, Y2)).	
		} 
		
		% double move	
		if percept(lastAction(move), lastActionParams([D, D2])), bel(activateDoubleSpeed) then {
			% update agent XY position with confirmed move nswe
			if bel(agentAt(X, Y), transformXYD(D, X, Y, X2, Y2)) then delete(agentAt(X, Y)) + insert(agentAt(X2, Y2)).	
			if bel(agentAt(X, Y), transformXYD(D2, X, Y, X2, Y2)) then delete(agentAt(X, Y)) + insert(agentAt(X2, Y2)).

		} % move	
		
		% succesfull attach action handling
		if percept(lastAction(attach), lastActionParams([Dir])), bel(haveBlockAttached(BoolOld2, Dold)) then 
		  delete(haveBlockAttached(BoolOld2, Dold)) + insert(haveBlockAttached(true, Dir)).		

		% rotate update attached coordinates
		if percept(lastAction(rotate), lastActionParams([Dir])), 
		   bel(haveBlockAttached(true, Dold), rotateToDirection(Dold, Dir, Dnew), directionToCoordinate(Dnew, A, B)), 
		   percept(attached(A, B)) 
		    then delete(haveBlockAttached(true, Dold)) + insert(haveBlockAttached(true, Dnew)).		
		
		% successful dispenser request
		if percept(lastAction(request), step(Step)), bel(haveDispenserDelivery(BoolOld, X)) then 
		    delete(haveDispenserDelivery(BoolOld, X)) + insert(haveDispenserDelivery(true, Step)).
		
		% successful connect supportingAgent set to find new task
		if percept(lastAction(connect)), bel(currentChosenTask(V1, V2, V3, V4, V5, V6, supportingAgent, V8)) then
		    delete(currentChosenTask(V1, V2, V3, V4, V5, V6, supportingAgent, V8)) + 
		    insert(currentChosenTask(task0, -11001001, 10 , 0, 1, b0, placeholder, placeholder2)).
		    
		% successful submit suubmittingAgent set to find new partner
		if percept(lastAction(submit)), bel(currentChosenTask(V1, V2, V3, V4, V5, V6, submittingAgentTwoTask, V8)) then
		    delete(currentChosenTask(V1, V2, V3, V4, V5, V6, submittingAgentTwoTask, V8)) + 
		    insert(currentChosenTask(V1, -1, V3, V4, V5, V6, submittingAgentTwoTask, supporterPending)).
	 
	}% lastaction success
	
}