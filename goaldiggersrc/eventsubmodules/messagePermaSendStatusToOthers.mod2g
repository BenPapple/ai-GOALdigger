use "../goaldiggerProlog" as knowledge.
use "./helperCustomRoleStatus" as module.

/**
 * Sending agents status and sync messages to all other agents
 *
 * @author Ben G.
 */
 
module messagePermaSendStatusToOthers {

	% Send stored dispensers to every connection that has asked this agent for them	
	forall (_).sent(messageNeedDispenser(BlockType,_)) 
		do {
			if bel(mapDispenser(X,Y,dispenser,BlockType,_,Bool)), 
			   percept(name(MyName)) 
			   	then allother.send(msgDispenserData(X,Y,dispenser,BlockType,Bool,MyName)).
	}

	% Send stored role zones to every connection that has asked this agent for them
	if bel(mapRoleZone(X,Y,_)), 
	   percept(name(MyName)) 
		then {
			forall (_).sent(messageNeedRoleZone(_)) 
				do allother.send(msgRoleZoneData(X,Y,MyName)).
	}

    % update custom roles designation
    if true then helperCustomRoleStatus.

	% send a status to all other agents while having block attached
	if bel(randomSeed(Seed), agentAt(X, Y, _), haveBlockAttached(true, DirBlock), 
	       directionToCoordinate(DirBlock, A, B)), 
	   bel(currentCustomRoleStatus(TaskRole)),
	   percept(name(OwnName), step(Step),role(Role), thing(A, B, block, BlockTypeAttached)) 
	    then allother.send(otherAgentStatus(OwnName, X, Y, Step, Seed, Role, BlockTypeAttached, TaskRole)).
	
	% send a status to all other agents without having block attached		
	if bel(randomSeed(Seed), agentAt(X, Y, _), haveBlockAttached(false, _)), 
	   bel(currentCustomRoleStatus(TaskRole)),
	   percept(name(OwnName), role(Role), step(Step)) 
	   	then allother.send(otherAgentStatus(OwnName, X, Y, Step, Seed, Role, noBlock, TaskRole)).
	
	% Sending other agents its position, name, step and position of perceived next agent if agent is being seen
	forall percept(team(TeamName), thing(OtherX, OtherY, entity, TeamName), 
	 			   OtherCalc is abs(OtherX) + abs(OtherY), OtherCalc \= 0, name(OwnName)), 
	       bel(agentAt(OwnX,OwnY, _), step(Step))
		do (channelNamesRelativeXY).send(seenOtherAgentAt(OwnX, OwnY, OtherX, OtherY, Step, OwnName)).
	
} % end module