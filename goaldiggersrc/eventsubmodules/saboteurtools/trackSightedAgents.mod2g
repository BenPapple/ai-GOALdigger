use "../../goaldiggerProlog" as knowledge.
use "../../goaldiggerAction" as actionspec.

module trackSightedAgents {

	if not(bel(visionRange(_)))
	  then insert(visionRange(5)).

	if not(bel(maxEnergy(_)))
	  then insert(maxEnergy(100)).

	if not(bel(recoverEnergy(_)))
	  then insert(recoverEnergy(2)).

	if bel(agentAt(X2,Y2,_), whitelistedTeam(MyTeam)), percept(step(NewStep))
	  then {
	  		forall bel(agentSighting(X,Y,DirX,DirY,OldStep,Energy), OldStep < NewStep) do {
		
				% if agent sighted at same location, change direction to (0,0).
				if percept(thing(X1, Y1, entity, OtherTeam), OtherTeam \= MyTeam, (X1 \= 0; Y1 \= 0)), bel(localize(X1,Y1,X2,Y2,X,Y)), not(bel(agentSighting(X,Y,_,_,NewStep,_)))
				  then delete(agentSighting(X,Y,DirX,DirY,OldStep,Energy)) + insert(agentSighting(X,Y,0,0,NewStep,Energy)) + print("Relocalizado uno"). % ToDo: Recuperar energía
		
				% if agent hit when not in movement, change direction to "none" and 
				if bel(hitSighting(X,Y,NewStep))
				  then delete(agentSighting(X,Y,DirX,DirY,OldStep,Energy)) 
				       + insert(agentSighting(X,Y,DirX,DirY,NewStep,Energy)).
		
				% if agent sighted at DirX, DirY distance from the original sighting, update location and direction
				if percept(thing(X1, Y1, entity, OtherTeam), OtherTeam \= MyTeam, (X1 \= 0; Y1 \= 0)), bel(localize(X1,Y1,X2,Y2,X3,Y3), X3 =:= X + DirX, Y3 =:= Y + DirY), not(bel(agentSighting(X3,Y3,_,_,NewStep,_)))
				  then delete(agentSighting(X,Y,DirX,DirY,OldStep,Energy)) + insert(agentSighting(X3,Y3,DirX,DirY,NewStep,Energy)) + print("Relocalizado dos"). % ToDo: Recuperar energía
		
		
				% if agent sighted at DirX, DirY distance from the original sighting, update location and direction
				if percept(thing(X1, Y1, entity, OtherTeam), OtherTeam \= MyTeam, (X1 \= 0; Y1 \= 0)), bel(localize(X1,Y1,X2,Y2,X3,Y3)), bel(abs(X3-X) + abs(Y3-Y) =< 2,
				  NewDirX is X3-X, NewDirY is Y3-Y), not(bel(agentSighting(X3,Y3,_,_,NewStep,_)))
				  then delete(agentSighting(X,Y,DirX,DirY,OldStep,Energy)) + insert(agentSighting(X3,Y3,NewDirX,NewDirY,NewStep,Energy)) + print("Relocalizado tres"). % ToDo: Recuperar energía
		
		
				if bel(agentSighting(X,Y,DirX,DirY,OldStep,Energy))
				  then delete(agentSighting(X,Y,DirX,DirY,OldStep,Energy)).
%				%if agent nearby, update location and direction
%				if percept(thing(X3, Y3, entity, OtherTeam), OtherTeam \= MyTeam, not(X3 =:= 0, Y3 =:= 0), 
%				           localize(X1, Y1, X2, Y2, X, Y), abs(X3-X1) + abs(Y3-Y1) =< 3), bel(localize(X3,Y3,X2,Y2,X4,Y4), 
%				           trackDirection(X1,Y1,X3,Y3,NewDirX,NewDirY)), not(bel(agentSighting(X4,Y4,_,_,NewStep,_)))
%				  then insert(agentSighting(X4,Y4,NewDirX,NewDirY,NewStep,Energy)) + print("Hasta aquí").
			  } % end do
			  
			 forall percept(thing(X,Y,entity,OtherTeam), OtherTeam \= MyTeam) do {
			 	%if true then print("Also entered here").
			 	if bel(localize(X, Y, X2, Y2, X5, Y5)), not(bel(X =:=0, Y=:=0)), not(bel(agentSighting(X5,Y5,_,_,_,_))), 
			 	not(bel(inactiveSighting(X5,Y5,_))), bel(maxEnergy(MaxEnergy)) 
			 	   then insert(agentSighting(X5,Y5,0,0,NewStep, MaxEnergy)) + allother.send(seenAgent("Seen an agent")).
			 } 
		% if no agent nearby, don't add anything		 
	}
}