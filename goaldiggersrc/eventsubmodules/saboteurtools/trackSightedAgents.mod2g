use "../../goaldiggerProlog" as knowledge.
use "../../goaldiggerAction" as actionspec.

/**
 * Keeps tracks of agents sighted by an agent with the custom role saboteur.
 * Only agents believed to be carrying a block are registered
 *
 * @author Isaac S.
 * 
 */

module trackSightedAgents {

	% Initialize relevant variables
	
	if not(bel(visionRange(_)))
	  then insert(visionRange(5)).

	if not(bel(maxEnergy(_)))
	  then insert(maxEnergy(100)).

	if not(bel(recoverEnergy(_)))
	  then insert(recoverEnergy(2)).

	% Remove all sightings of agents considered to be inactive
	forall bel(agentSighting(X,Y,DirX,DirY,OldStep,Energy,BlockType,BlockDir)) do {
		if bel(inactiveSighting(X,Y,_)) then delete(agentSighting(X,Y,DirX,DirY,OldStep,Energy,BlockType,BlockDir)).
	}
	
	% update energy of all sightings according to the energy recovery rate and the max energy
	forall bel(agentSighting(X,Y,DirX,DirY,OldStep,OldEnergy,BlockType,BlockDir)) do {
		
		if bel(recoverEnergy(RecoveredEnergy), recoverEnergy(OldEnergy, RecoveredEnergy, NewEnergy))
		  then delete(agentSighting(X,Y,DirX,DirY,OldStep,OldEnergy,BlockType,BlockDir))
		       + insert(agentSighting(X,Y,DirX,DirY,OldStep,NewEnergy,BlockType,BlockDir)).
	}

	if bel(agentAt(X2,Y2,_), whitelistedTeam(MyTeam)), percept(step(NewStep))
	  then {
	  
	  		% analyze data about agent sightings and relocate if needed
	  		forall bel(agentSighting(X,Y,DirX,DirY,OldStep,Energy,BlockType,BlockDir), OldStep < NewStep) do {
		
				% if agent sighted at same location, change its direction to (0,0) and handle block rotations.
				if percept(thing(X1, Y1, entity, OtherTeam), OtherTeam \= MyTeam, (X1 \= 0; Y1 \= 0)), 
				   bel(localize(X1,Y1,X2,Y2,X,Y)), bel(directionToCoordinate(BlockDir,BlockX,BlockY)),
				   not(bel(agentSighting(X,Y,_,_,NewStep,_,_,_)))
				     then {
						
						if true then delete(agentSighting(X,Y,DirX,DirY,OldStep,Energy,BlockType,BlockDir)).
						
						% if agent hasn't rotated its block, just update the direction to 0,0
						if percept(thing(X01,Y01, block, BlockType), X01 =:= X1 + BlockX, Y01 =:= Y1 + BlockY)
							then {
								if true then insert(agentSighting(X,Y,0,0,NewStep,Energy,BlockType,BlockDir)).
								
								% add flag if suspected submitter
								if bel(BlockDir = s) then insert(submitterSighted(X,Y,NewStep)).
							}
						
						% if agent has rotated its block, update the direction to 0,0 and update block direction
						if not(percept(thing(X01,Y01, block, BlockType), X01 =:= X1 + BlockX, Y01 =:= Y1 + BlockY)),
							   percept(thing(X02,Y02, block, NewBlockType), attached(X02,Y02)), 
							   bel(abs(X1-X02) + abs(Y1-Y02) =:= 1),
							   bel(NewDirX is X02 - X1, NewDirY is Y02 - Y1, 
							       directionToCoordinate(NewBlockDir,NewDirX,NewDirY)) 
							     then insert(agentSighting(X,Y,0,0,NewStep,Energy,NewBlockType,NewBlockDir)). 
							     %+ print("Relocated without displacement but with rotation").
							   
						% if the block of the agent is not to be seen because of agent on the fringe on the perception 
						% field, just believe it still has a block and update the direction to 0,0
						if not(percept(thing(X01,Y01, block, _), attached(X01,Y01), abs(X1-X01) + abs(Y1-Y01) =:= 1)),
						   bel(visionRange(Range), abs(X1) + abs(Y1) =:= Range)	
							   then insert(agentSighting(X,Y,0,0,NewStep,Energy,BlockType,BlockDir)). 
							        %+ print("Relocated without displacement, block possibly out of vision range").
				}
		
				% if agent sighted at DirX, DirY distance from the original sighting, update location and direction
				if percept(thing(X1, Y1, entity, OtherTeam), OtherTeam \= MyTeam, (X1 \= 0; Y1 \= 0)), 
				   bel(localize(X1,Y1,X2,Y2,X3,Y3), X3 =:= X + DirX, Y3 =:= Y + DirY), 
				   not(bel(agentSighting(X3,Y3,_,_,NewStep,_,_,_)))
				     then delete(agentSighting(X,Y,DirX,DirY,OldStep,Energy,BlockType,BlockDir)) 
				          + insert(agentSighting(X3,Y3,DirX,DirY,NewStep,Energy,BlockType,BlockDir)). 
				          %+ print("Relocated according to direction"). % ToDo: Recover energy
		
		
				% if agent sighted at DirX, DirY distance from the original sighting, update location and direction
				if percept(thing(X1, Y1, entity, OtherTeam), OtherTeam \= MyTeam, (X1 \= 0; Y1 \= 0)), 
				   bel(localize(X1,Y1,X2,Y2,X3,Y3)), bel(abs(X3-X) + abs(Y3-Y) =:= 1,
				       NewDirX is X3-X, NewDirY is Y3-Y), not(bel(agentSighting(X3,Y3,_,_,NewStep,_,_,_)))
				     then delete(agentSighting(X,Y,DirX,DirY,OldStep,Energy,BlockType,BlockDir)) 
				           + insert(agentSighting(X3,Y3,NewDirX,NewDirY,NewStep,Energy,BlockType,BlockDir)). 
				           %+ print("Relocated in contiguous position"). % ToDo: Recover energy
		
				% delete original sighting if none of the above applies 
				if bel(agentSighting(X,Y,DirX,DirY,OldStep,Energy,BlockType,BlockDir))
				  then delete(agentSighting(X,Y,DirX,DirY,OldStep,Energy,BlockType,BlockDir)).

			  } % end do

			 % insert data about agent sighted carrying a block; new sightings are believed to have full energy			 
			 forall percept(thing(X,Y,entity,OtherTeam), OtherTeam \= MyTeam) do {
			 
			 	if percept(thing(X1, Y1, block, Type), attached(X1, Y1), abs(X1-X) + abs(Y1-Y) =:= 1), 
			 	   bel(X0 is X1-X, Y0 is Y1-Y, directionToCoordinate(Dir,X0,Y0)),
			 	   %not(percept(thing(X3,Y3,entity,_), (X3 \= X; Y3 \= Y), (X3 \= 0; Y3 \= 0), abs(X3-X1) + abs(Y3-Y1) =:= 1)), 
			 	   bel(localize(X, Y, X2, Y2, X5, Y5)), not(bel(X =:=0, Y=:=0)), 
			 	   not(bel(agentSighting(X5,Y5,_,_,_,_,_,_))), 
			 	   % to avoid one-taskers, don't register sightings next to dispensers with the same type 
			 	   not(percept(thing(X01,Y01,dispenser,Type), abs(X-X01)+abs(Y-Y01) =:= 1)), 			 	                                                                             
			 	   not(bel(inactiveSighting(X5,Y5,_))), bel(maxEnergy(MaxEnergy)),
			 	   bel(localize(X1,Y1,X2,Y2,X6,Y6)),
			 	   not(bel(agentSighting(X7,Y7,_,_,_,_,_,OtherDir), directionToCoordinate(OtherDir,X8,Y8),
			 	   X6 =:= X7 + X8, Y6 =:= Y7 + Y8))
			 	   then insert(agentSighting(X5,Y5,0,0,NewStep, MaxEnergy, Type, Dir)).
			 } 
		% if no agent nearby, don't add anything		 
	}
}