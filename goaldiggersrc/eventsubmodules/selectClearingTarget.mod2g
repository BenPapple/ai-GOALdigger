use "../goaldiggerProlog" as knowledge.
use "../goaldiggerAction" as actionspec.

module selectClearingTarget {

	if not(bel(visionRange(_)))
	  then insert(visionRange(5)).

	if not(bel(maxEnergy(_)))
	  then insert(maxEnergy(100)).

	if bel(agentAt(X2,Y2,_), whitelistedTeam(MyTeam)), percept(step(NewStep))
	  then {
	  
	  		forall bel(agentSighting(X,Y,DirX,DirY,OldStep,Energy), OldStep < NewStep, localize(X1, Y1, X2, Y2, X, Y)) do {

				if true then delete(agentSighting(X,Y,DirX,DirY,OldStep,Energy)).
		
				% if agent sighted at same location, change direction to "none".
				if percept(thing(X1, Y1, entity, OtherTeam), OtherTeam \= MyTeam)
				  then insert(agentSighting(X,Y,0,0,NewStep,Energy)).
		
				% if agent nearby, update location and direction
				if percept(thing(X3, Y3, entity, OtherTeam), OtherTeam \= MyTeam, not(X3 =:= 0, Y3 =:= 0), abs(X3-X1) + abs(Y3-Y1) =< 3,
				localize(X3,Y3,X2,Y2,X4,Y4), trackDirection(X1,Y1,X3,Y3,NewDirX,NewDirY)), not(bel(agentSighting(X4,Y4,_,_,NewStep,_)))
				  then insert(agentSighting(X4,Y4,NewDirX,NewDirY,NewStep,Energy)).
			  } % end do
			  
			 forall percept(thing(X,Y,entity,OtherTeam), OtherTeam \= MyTeam, localize(X, Y, X2, Y2, X1, Y1)) do {
			 
			 	if not(bel(agentSighting(X1,Y1,_,_,_,_))), bel(maxEnergy(MaxEnergy)) 
			 	   then insert(agentSighting(X1,Y1,0,0,NewStep, MaxEnergy)).
			 } 
		% if no agent nearby, don't add anything
		 
	}

	
}