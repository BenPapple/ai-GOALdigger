use "../goaldiggerProlog" as knowledge.
use "../goaldiggerAction" as actionspec.
use "../pathfinding/helperManhattanChoice" as module.
use "../pathfinding/executeRandomMove" as module.
use "../actionhandling/preActionCleanup" as module.
use "../pathfinding/helperMoveWithoutBlock" as module.


/**
 * update Explore direction
 *
 * @author Marco G.
 */

module updateExploreMoveDirection {

	if bel(northExplored) then delete(northExplored).
	if bel(southExplored) then delete(southExplored).
	if bel(eastExplored) then delete(eastExplored).
	if bel(westExplored) then delete(westExplored).
	
	if bel(agentAt(X, Y, _), mapMarkExplored(MarkX, MarkY), DX_min is X-4, DX_max is X+4, 
	       MarkX >= DX_min, MarkX =< DX_max)
		then {
			if bel(DY_min is Y, DY_max is Y-4, MarkY < DY_min, MarkY > DY_max) 
				then insert(northExplored).
			if bel(DY_min is Y, DY_max is Y+4, MarkY > DY_min, MarkY < DY_max) 
				then insert(southExplored).
		}
	
	if bel(agentAt(X, Y, _), mapMarkExplored(MarkX, MarkY), DY_min is Y-4, DY_max is X+4, 
	       MarkY >= DY_min, MarkY =< DY_max)
		then {
			if bel(DX_min is X, DX_max is X-4, MarkX < DX_min, MarkX > DX_max) 
				then insert(eastExplored).
			if bel(DX_min is X, DX_max is Y+4, MarkX > DX_min, MarkX < DX_max) 
				then insert(westExplored).
		}
%	forall bel(mapMarkExplored(ExploredX, ExploredY))
%		do {
%			% Checks all direction if a marks is in a perimeter of 4x4
%			if bel(agentAt(X, Y, _), DX is ExploredX - X, DY is ExploredY - Y) then {
%				if not(bel(northExplored)) then {
%					if bel(DY =< -1, DY >= -4), bel(DX >= -4, DX =< 4) 
%					    then insert(northExplored). 	
%				}
%				
%				if not(bel(eastExplored)) then {
%					if bel(DX >= 1, DX =< 3), bel(DY >= -4, DY =< 4)
%					    then insert(eastExplored).
%				}
%				
%				if not(bel(southExplored)) then {
%					if bel(DY >= 1, DY =< 3), bel(DX >= -4, DX =< 4)
%					    then insert(southExplored).
%				}
%				
%				if not(bel(westExplored)) then {
%					if bel(DX =< -1, DX >= -4), bel(DY >= -4, DY =< 4)
%					    then insert(westExplored).
%				}
%			}
%	}
	
	%Works after guardian system, if a direction is "blocked" the guardian is set	
	if not(bel(northExplored)), bel(exploreDirection(Dir))
		then delete(exploreDirection(Dir)) + 
			 insert(exploreDirection(n)) +
			 exit-module.
	
	if not(bel(eastExplored)), bel(exploreDirection(Dir))
		then delete(exploreDirection(Dir)) +
		 	 insert(exploreDirection(e)) +
		 	 exit-module.
		 	 
	if not(bel(southExplored)), bel(exploreDirection(Dir))
		then delete(exploreDirection(Dir)) + 
		 	 insert(exploreDirection(s)) +
		 	 exit-module.
		 	 
	if not(bel(westExplored)), bel(exploreDirection(Dir))
		then delete(exploreDirection(Dir)) + 
		 	 insert(exploreDirection(w)) +
		 	 exit-module.
		 	 
	%If all directions are "blocked" it choose a random direction 	 	 
	if bel(exploreDirection(Dir)) 
		then delete(exploreDirection(Dir)) + 
			 insert(exploreDirection(r)) +
			 exit-module.
	
}