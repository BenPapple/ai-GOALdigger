use "../goaldiggerProlog" as knowledge.
use "../goaldiggerAction" as actionspec.
use "../eventsubmodules/updateNearestAgentData" as module.

/**
 * coordination for tasks greater than 1 (submittingAgent & supportingAgent)
 *
 */
 
module messageMultiTaskCoordination {

	% SUBMODULE update nearest Agent on map for submitterleader when necessary
	if bel(currentChosenTask(_, _, _, _, _, _, submittingAgentTwoTask, supporterPending)),
	   bel(submitterLeader, confirmedOtherAgentAt(_, _, _)) then updateNearestAgentData.

	% set other agent with needed block as supporter and oneself as submitter
	if bel(submitterLeader, currentChosenTask(TaskName, V2, V3, V4, V5, V6, submittingAgentTwoTask, supporterPending)) 
	    then {
	
		if percept(task(TaskName,_, 40,[req(0,1,BlockType1),req(X2,Y2,_)]), name(SubmitterName)) then {
				if bel(targetNearestAgentWithNeededBlock(SupporterName, _, _, _), SupporterName \= placeholder) 
					then {
						if true then (channnelMultiTask).send(informSupportingAgent(SubmitterName, supportingAgent, 
						                                      SupporterName, X2, Y2, TaskName)).
						if true then delete(currentChosenTask(TaskName, V2, V3, V4, V5, V6, submittingAgentTwoTask, 
						                    supporterPending)) + 
							         insert(currentChosenTask(TaskName, V2, V3, 0, 1, BlockType1, 
							                submittingAgentTwoTask, SupporterName)) 
							         + exit-module.
					}
		}
			
		if percept(task(TaskName ,_, 40,[req(X2,Y2,_),req(0,1, BlockType2)]), name(SubmitterName)) then {
				if bel(targetNearestAgentWithNeededBlock(SupporterName, _, _, _), SupporterName \= placeholder) then {
						if true then (channnelMultiTask).send(informSupportingAgent(SubmitterName, supportingAgent, 
						                                      SupporterName, X2, Y2, TaskName)).
						if true then delete(currentChosenTask(TaskName, V2, V3, V4, V5, V6, submittingAgentTwoTask, 
						                    supporterPending)) + 
							         insert(currentChosenTask(TaskName, V2, V3, 0, 1, BlockType2, 
							                submittingAgentTwoTask, SupporterName)) 
							         + exit-module.
				}
		}
				
	} % other agent has block
	
	% set other agent without fitting block
	if bel(submitterLeader, currentChosenTask(TaskName, V2, V3, V4, V5, V6, submittingAgentTwoTask, supporterPending)) 
	    then {
	
		if percept(task(TaskName,_, 40,[req(0,1,BlockType1),req(X2,Y2,_)]), name(SubmitterName)) then {
				if bel(targetNearestAgent(SupporterName, _, _, _), SupporterName \= placeholder)
					then {
						if true then (channnelMultiTask).send(informSupportingAgent(SubmitterName, supportingAgent, 
						                                      SupporterName, X2, Y2, TaskName)).
						if true then delete(currentChosenTask(TaskName, V2, V3, V4, V5, V6, submittingAgentTwoTask, 
						                    supporterPending)) + 
							         insert(currentChosenTask(TaskName, V2, V3, V4, V5, BlockType1, 
							                submittingAgentTwoTask, SupporterName)) 
							         + exit-module.
					}
		}
			
		if percept(task(TaskName ,_, 40,[req(X2,Y2, _),req(0,1, BlockType2)]), name(SubmitterName)) then {
				if bel(targetNearestAgent(SupporterName, _, _, _), SupporterName \= placeholder) 
					then {
						if true then (channnelMultiTask).send(informSupportingAgent(SubmitterName, supportingAgent, 
						                                      SupporterName, X2, Y2, TaskName)).
						if true then delete(currentChosenTask(TaskName, V2, V3, V4, V5, V6, submittingAgentTwoTask, 
						                    supporterPending)) + 
							         insert(currentChosenTask(TaskName, V2, V3, 0, 1, BlockType2, 
							                submittingAgentTwoTask, SupporterName)) 
							         + exit-module.
				}
		}
				
	} % other agent has no block or no fitting block
	
	% RECEIVE submitterLeader order cease supporting
	if (_).sent(informCeaseSupporting(NameSender)), 
	   bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, NameSender)) ,
	   not(bel(submitterLeader)) then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, NameSender)) 
			                          + insert(currentChosenTask(V1, -1, V3, V4, V5, V6, needNewTask, needNewTask)).
	
	
	% RECEIVE become supportingAgent, check block for task and target		
	if percept(name(NameOwn)), (_).sent(informSupportingAgent(NameSender, supportingAgent, NameOwn, _, _, TaskName)), 
	   bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)),
	   percept(task(TaskName ,TaskStep, 40,[req(X3, Y3, BlockType1),req(X4, Y4, BlockType2)])),
	   not(bel(submitterLeader)) then {
			if bel(X3 == 0, Y3 == 1) then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) 
			                              + insert(currentChosenTask(TaskName, TaskStep, 40, X4, Y4, BlockType2, 
			                                       supportingAgent, NameSender)).	
			if bel(X4 == 0, Y4 == 1) then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) 
			                              + insert(currentChosenTask(TaskName, TaskStep, 40, X3, Y3, BlockType1, 
			                                       supportingAgent, NameSender)).
	}
					
 } % end module