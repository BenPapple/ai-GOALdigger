use "../goaldiggerProlog" as knowledge.
use "../goaldiggerAction" as actionspec.
use "../eventsubmodules/updateNearestAgentDistance" as module.

/**
 * coordination for tasks greater than 1 (submittingAgent & supportingAgent)
 *
 */
 
module messageMultiTaskCoordination {

	% SUBMODULE update nearest Agent on map for submitterleader when necessary
	if bel(currentChosenTask(_, _, _, _, _, _, submittingAgentTwoTask, supporterREQPending)),
	   bel(submitterLeader, confirmedOffsetOfAgent(_, _, _)) 
	   	then updateNearestAgentDistance.

	% set other agent with needed block as supporter and oneself as submitter
	if bel(submitterLeader, currentChosenTask(TaskName, V2, V3, V4, V5, V6, submittingAgentTwoTask, 
	                                          supporterREQPending)),
	   bel(confirmedOffsetOfAgent(_, _, _)) 
	    then {
			if percept(task(TaskName,_, 40,[req(0,1,BlockType1),req(X2,Y2,_)]), name(SubmitterName)) 
				then {
					if bel(targetNearestAgentWithNeededBlock(SupporterName, _, _, _), SupporterName \= placeholder) 
						then {
							if true then (channnelMultiTask).send(informSupportingAgent(SubmitterName, supportingAgent, 
							                                      SupporterName, X2, Y2, TaskName)).
							if true then delete(currentChosenTask(TaskName, V2, V3, V4, V5, V6, submittingAgentTwoTask, 
							                    supporterREQPending)) + 
								         insert(currentChosenTask(TaskName, V2, V3, 0, 1, BlockType1, 
								                submittingAgentTwoTask, supporterACKPending)) +
								         exit-module.
						}
			}
				
			if percept(task(TaskName ,_, 40,[req(X2,Y2,_),req(0,1, BlockType2)]), name(SubmitterName)) 
				then {
					if bel(targetNearestAgentWithNeededBlock(SupporterName, _, _, _), SupporterName \= placeholder) 
						then {
							if true then (channnelMultiTask).send(informSupportingAgent(SubmitterName, supportingAgent, 
							                                      SupporterName, X2, Y2, TaskName)).
							if true then delete(currentChosenTask(TaskName, V2, V3, V4, V5, V6, submittingAgentTwoTask, 
							                    supporterREQPending)) + 
								         insert(currentChosenTask(TaskName, V2, V3, 0, 1, BlockType2, 
								                submittingAgentTwoTask, supporterACKPending)) +
								         exit-module.
					}
			}
	} % other agent has block
	
	% set nearest agent without fitting block
	if bel(submitterLeader, currentChosenTask(TaskName, V2, V3, V4, V5, V6, submittingAgentTwoTask, 
	                                          supporterREQPending)),
	   bel(confirmedOffsetOfAgent(_, _, _)) 
	    then {
			if percept(task(TaskName,_, 40,[req(0,1,BlockType1),req(X2,Y2,_)]), name(SubmitterName)) 
				then {
					if bel(targetNearestAgent(SupporterName, _, _, _), SupporterName \= placeholder)
						then {
							if true then (channnelMultiTask).send(informSupportingAgent(SubmitterName, supportingAgent, 
						                                          SupporterName, X2, Y2, TaskName)).
						if true then delete(currentChosenTask(TaskName, V2, V3, V4, V5, V6, submittingAgentTwoTask, 
						                    supporterREQPending)) + 
							         insert(currentChosenTask(TaskName, V2, V3, V4, V5, BlockType1, 
							                submittingAgentTwoTask, supporterACKPending)) +
							         exit-module.
					}
		}
			
		if percept(task(TaskName ,_, 40,[req(X2,Y2, _),req(0,1, BlockType2)]), name(SubmitterName)) 
			then {
				if bel(targetNearestAgent(SupporterName, _, _, _), SupporterName \= placeholder) 
					then {
						if true then (channnelMultiTask).send(informSupportingAgent(SubmitterName, supportingAgent, 
						                                      SupporterName, X2, Y2, TaskName)).
						if true then delete(currentChosenTask(TaskName, V2, V3, V4, V5, V6, submittingAgentTwoTask, 
						                    supporterREQPending)) + 
							         insert(currentChosenTask(TaskName, V2, V3, 0, 1, BlockType2, 
							                submittingAgentTwoTask, supporterACKPending)) +
							         exit-module.
				}
		}
	} % other agent has no block or no fitting block
	
	% RECEIVE as submitterLeader ACK from supporter
	forall (_).sent(msgACKtask(NameSupporter)), 
	       bel(submitterLeader),
	       bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, supporterACKPending))	       
	   	do delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, supporterACKPending)) +
		   insert(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, NameSupporter)).
		   
   	% RECEIVE as submitterLeader NoACK from supporter
	forall (_).sent(msgNoACKtask(_)), 
	       bel(submitterLeader),
	       bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, supporterACKPending))	       
	   	do delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, supporterACKPending)) +
		   insert(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, supporterREQPending)).
	
	% RECEIVE submitterLeader order cease supporting
	if (_).sent(informCeaseSupporting(NameSender)), 
	   bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, NameSender)) ,
	   not(bel(submitterLeader)) 
	   	then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, NameSender)) +
			 insert(currentChosenTask(V1, -1, V3, V4, V5, V6, needNewTask, needNewTask)).
	
	
	% RECEIVE become supportingAgent, check block for task and target		
	forall percept(name(NameOwn)), 
	       (ConnectSender).sent(informSupportingAgent(NameSender, supportingAgent, NameOwn, _, _, TaskName)) 
	    do{ 
	    if bel(currentChosenTask(_, _, _, _, _, _, ClientServer, _), ClientServer == supportingAgent),
	       not(bel(submitterLeader)) 
	   	    then (ConnectSender).send(msgNoACKtask(NameOwn)).
	   	    
        if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, ClientServer, V8), ClientServer \= supportingAgent),
	       percept(task(TaskName ,TaskStep, 40,[req(X3, Y3, BlockType1),req(X4, Y4, BlockType2)])),
	       not(bel(submitterLeader)) 
	   	    then {
				if bel(X3 == 0, Y3 == 1) 
					then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, ClientServer, V8)) +
				         insert(currentChosenTask(TaskName, TaskStep, 40, X4, Y4, BlockType2, supportingAgent, 
				                NameSender)) +
				         (ConnectSender).send(msgACKtask(NameOwn)).	
				if bel(X4 == 0, Y4 == 1) 
					then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, ClientServer, V8)) +
				         insert(currentChosenTask(TaskName, TaskStep, 40, X3, Y3, BlockType1, supportingAgent, 
				                NameSender)) +
				         (ConnectSender).send(msgACKtask(NameOwn)).
        } % if 2
	} % forall
	
 } % end module