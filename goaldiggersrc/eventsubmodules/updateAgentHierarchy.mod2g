use "../goaldiggerProlog" as knowledge.
use "../goaldiggerAction" as actionspec.

/**
 * Handle ranking of agents and assign submitterLeader/warrior/explorer to one agent
 *
 */

module updateAgentHierarchy {
	
	% seed collision choose new seed
	forall bel(storedOtherAgentStatus(_, _, _, OtherAgentSeed, _, _, _, _, _)) 
		do {
	    	if bel(randomSeed(MyRandomSeed), MyRandomSeed == OtherAgentSeed) 
	    		then {
			    	if bel(getRandomNumberSeed(NewSeed)) 
			    		then delete(randomSeed(MyRandomSeed)) + 
			                 insert (randomSeed(NewSeed)).
		}
    }
	
	if percept(step(SimStep), SimStep > 9) 
		then {
		% RESET
		if bel(positionInHirarchie(PositionInHirarchie)) 
			then delete(positionInHirarchie(PositionInHirarchie)) +
		         insert(positionInHirarchie(0)).	
		
		% position in hierarchy will increase for every lower other agent's randomSeed
		forall bel(storedOtherAgentStatus(_, _, _, OtherAgentSeed, _, _, _, _, _)) 
			do {
		    if bel(randomSeed(MyRandomSeed), positionInHirarchie(PositionInHirarchie), MyRandomSeed > OtherAgentSeed, 
			       NewPositionInHirarchie is PositionInHirarchie + 1) 
			    then delete(positionInHirarchie(PositionInHirarchie)) + 
			         insert (positionInHirarchie(NewPositionInHirarchie)).
		}

		% assign submitterLeader
		if percept(teamSize(SizeTeam), name(MyName)), 
		   bel(positionInHirarchie(PositionInHirarchie), PosCheck is SizeTeam - PositionInHirarchie),
		   bel(0 =:= mod(PosCheck, 5))
			  then {
			 if not(bel(submitterLeader)) then insert(submitterLeader) + 
			 allother.send(msgSubmitterLeader(MyName)).			 
		}

		% assign customRoleSaboteur
		if bel(activateSaboteurFeature),
		   percept(teamSize(SizeTeam), SizeTeam > 6, name(MyName)), 
		   bel(positionInHirarchie(PositionInHirarchie), PosCheck is SizeTeam - PositionInHirarchie, PosCheck == 1),
		   not(bel(submitterLeader)) 
			then {
			
			if true then insert(attachedBlokes(0)).
			if bel(getFree) then delete(getFree).
			if not(bel(customRole(_))) then insert(customRole(customRoleSaboteur)) +
			                                allother.send(msgCustomRole(MyName)).			 
		}
		
%	  % remove submitterLeader
%		if percept(teamSize(SizeTeam)), 
%		   bel(submitterLeader, positionInHirarchie(PositionInHirarchie), 
%		       PosCheck is SizeTeam - PositionInHirarchie, PosCheck > 2)
%			then delete(submitterLeader).
	}
	
} % end module