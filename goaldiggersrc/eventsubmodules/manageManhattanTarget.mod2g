use "../goaldiggerProlog" as knowledge.
use "../goaldiggerAction" as actionspec.
use "../pathfinding/helperManhattanCalc" as module.
use "../eventsubmodules/updateGoalzoneDistance" as module.

/**
 * Manages Manhattan targets
 *
 */
 
module manageManhattanTarget {

	% update rolezone target MD
	if percept(role(default)), 
	   bel(targetMd(X, Y, Target), targetClosestRoleZone(A, B, MdAlt), MdAlt < 1234567)
		then delete(targetMd(X, Y, Target)) + 
		     insert(targetMd(A, B, rolezone)) + 
		     insert(executeManhattan).	
	
	% when role default store first seen RoleZone coordinates as targetMd
	if percept(roleZone(X, Y), role(default)), 
	   bel(agentAt(X2, Y2, _), targetMd(X4, Y4, Target), localize(X, Y, X2, Y2, X3, Y3)) 
	    then delete(targetMd(X4, Y4, Target)) + 
	    	 insert(targetMd(X3, Y3, rolezone)) + 
	    	 insert(executeManhattan).
		
	% when role worker and without block set dispenser as target
	if percept(step(SimStep), role(worker)), 
	   bel(haveBlockAttached(false,_), currentChosenTask(_, TaskStep, _, _, _, BlockType, _, _), TaskStep >= SimStep, 
		   targetDispenserAt(AltX, AltY, AltBlockType, _), BlockType == AltBlockType) 
		   	then {		
				if bel(targetMd(X4, Y4, Target)) 
					then delete(targetMd(X4, Y4, Target)) + 
				         insert(targetMd(AltX, AltY, dispenser)).	
				if not(bel(executeManhattan)) 
					then insert(executeManhattan).
	}

	% when role test worker and without bloke set goalzone as target
	if bel(role(testWorker)), not(bel(targetMd(_,_,goalzone))), bel(searchInGoalzone) then {
		   		if true then updateGoalzoneDistance.
		   		if bel(targetClosestGoalZone(X, Y, _)) then {
					if bel(targetMd(X4, Y4, Target)) then delete(targetMd(X4, Y4, Target)). 
					if true then insert(targetMd(X, Y, goalzone)) + allother.send(goToGoal("First step")).	
					if not(bel(executeManhattan)) then insert(executeManhattan).
				}
	}

	% when role test worker and without bloke set dispenser as target
	if bel(role(testWorker), haveBlokeAttached(false,_), searchInDispenser,
		   mapDispenser(X,Y,dispenser,BlockType,_,_)), percept(task(_, _, _,[req(_,_,BlockType)])), 
		   not(bel(emptyDispenserCounter(X, Y, Count), Count > 20)) then {		
				if bel(targetMd(X4, Y4, Target)) then delete(targetMd(X4, Y4, Target)). 
				if true then insert(targetMd(X, Y, dispenser)).	
				if not(bel(executeManhattan)) then insert(executeManhattan).
	}

	% With block and as submittingAgent update goalzone target MD
	if bel(haveBlockAttached(true, _), step(SimStep), currentChosenTask(_, TaskStep, _, _, _, _, OneOrTwoTask, _), 
	       TaskStep >= SimStep, targetMd(X, Y, Target), targetClosestGoalZone(A, B, MdAlt), MdAlt < 1234567),
	   bel(OneOrTwoTask == submittingAgentTwoTask; OneOrTwoTask == submittingAgentOneTask)
		then delete(targetMd(X, Y, Target)) + 
			 insert(targetMd(A, B, goalzone)) + 
			 insert(executeManhattan).
		
	% target goalzone from percept as submitter
	if bel(haveBlockAttached(true,_), currentChosenTask(_, TaskStep, _, _, _, _, OneOrTwoTask, _), 
	       agentAt(AgentX, AgentY, _)), 
	   percept(step(SimStep), role(worker), goalZone(GoalX, GoalY)),
	   bel(TaskStep >= SimStep, AltX is GoalX + AgentX, AltY is GoalY + AgentY),
	   bel(OneOrTwoTask == submittingAgentTwoTask; OneOrTwoTask == submittingAgentOneTask)
	    then {		
			if bel(targetMd(X4, Y4, Target)) 
				then delete(targetMd(X4, Y4, Target)) + 
				     insert(targetMd(AltX, AltY, goalzone)).	
			if not(bel(executeManhattan)) 
				then insert(executeManhattan).
	}
	
	% With block and as targetTaskSubmitter update other agent coords as target(or location delivery position or 
	% goalzone), coordinates converted from A,B to C,D
	if bel(haveBlockAttached(true, _), step(SimStep), 
	       currentChosenTask(_, TaskStep, _, _, _, _,supportingAgent, NameSubmitter), TaskStep >= SimStep, 
	       confirmedOffsetOfAgent(OffsetX, OffsetY, NameSubmitter),
		   targetMd(X, Y, Target), Target \== supportingPosition),
	   bel(storedOtherAgentStatus(NameSubmitter, _, worker, _, _, A, B, _)), 
	   bel(localize(A, B, OffsetX, OffsetY, C, D), D2 is D + 2 )
		then delete(targetMd(X, Y, Target)) + 
			 insert(targetMd(C, D2, otherAgentAt)) + 
			 insert(executeManhattan).
	
	% Moving around Submitting agent for docking sequence
	if percept(team(Team), thing(XSubmit, YSubmit, entity, Team), goalZone(XSubmit, YSubmit), XBlock is XSubmit,
	           YBlock is YSubmit+1, thing(XBlock, YBlock, block, SouthBlock), 
	           XPlusY is XSubmit + YSubmit, XPlusY \= 0, attached(XBlock, YBlock)),
	   bel(haveBlockAttached(true, _)) 
	   	then {
			if bel(agentAt(Xself, Yself, _), currentChosenTask(TaskName, _, _, XTask, YTask, _, supportingAgent, 
			       SubmitterName)),
			   bel(storedOtherAgentStatus(SubmitterName, _, _, _, _, _, _, SubmitterBlockTypeAttached), 
			       SubmitterBlockTypeAttached == SouthBlock), 
			   percept(task(TaskName, _, 40,[req(_, _, _),req(_, _, _)])),
			   bel(Xtarget is Xself + XSubmit + XTask + 0, Ytarget is Yself + YSubmit + YTask + 1, 
			       targetMd(Xdel, Ydel, Zdel))
			    then delete(targetMd(Xdel, Ydel, Zdel)) + 
			    	 insert(targetMd(Xtarget, Ytarget, supportingPosition)).
	}
	
	% Manhattan Magic calculate nswe
	if bel(executeManhattan) 
		then helperManhattanCalc.	
} % end module