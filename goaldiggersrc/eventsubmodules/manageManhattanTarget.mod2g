use "../goaldiggerProlog" as knowledge.
use "../goaldiggerAction" as actionspec.

/**
 * Manages Manhattan targets
 *
 */
 
module manageManhattanTarget {

	% when role default store first seen RoleZone coordinates as targetMd
	if percept(roleZone(X, Y), role(default)), bel(agentAt(X2, Y2), targetMd(X4, Y4, Target), localize(X, Y, X2, Y2, X3, Y3)), not(bel(executeManhattan)) then 
		delete(targetMd(X4, Y4, Target)) + insert(targetMd(X3, Y3, rolezone)) + insert(executeManhattan).
		
	% when role worker and without block set dispenser as target
	if percept(step(SimStep), role(worker)), bel(haveBlockAttached(false,_), currentChosenTask(_, TaskStep, _, _, _, BlockType, _, _), TaskStep >= SimStep, 
		targetDispenserAt(AltX, AltY, AltBlockType, _), BlockType == AltBlockType) then {
		
				if bel(targetMd(X4, Y4, Target)) then delete(targetMd(X4, Y4, Target)) + insert(targetMd(AltX, AltY, dispenser)).	
				if not(bel(executeManhattan)) then insert(executeManhattan).
				
	}
		
	% With block and as submittingAgent update goalzone target MD
	if bel(haveBlockAttached(true, _), step(SimStep), currentChosenTask(_, TaskStep, _, _, _, _, submittingAgent, _), TaskStep >= SimStep, targetMd(X, Y, Target), 
			targetClosestGoalZone(A, B, MdAlt), MdAlt < 1234567)
		then delete(targetMd(X, Y, Target)) + insert(targetMd(A, B, goalzone)) + insert(executeManhattan).
		
	% Moving around Submitting agent for docking sequence
	if percept(team(Team), thing(X, Y, entity, Team), YBlock is Y+1, thing(XBlock, YBlock, block, _), X \== 0, Y \== 0, attached(X, YBlock)) then {
		if bel(agentAt(Xself, Yself), currentChosenTask(TaskName, _, _, X3, Y3, BlockType, supportingAgent, _)), percept(task(TaskName, _, 40,[req(X1, Y1, BlockType),req(X2, Y2, BlockType2)])),
			bel(Xtarget is X + X3 + Xself + 0, Ytarget is Y + Y3 + Yself + 1, targetMd(Xdel, Ydel, Zdel)) 
				then delete(targetMd(Xdel, Ydel, Zdel)) + insert(targetMd(Xtarget, Ytarget, supportingPosition)).
	}
		
	% With block and as targetTaskSubmitter update other agent coords as target(or location delivery position or goalzone), coordinates converted from A,B to C,D
	% ToDo delocalize gegen localize getauscht
	if bel(haveBlockAttached(true, _), step(SimStep), currentChosenTask(_, TaskStep, _, _, _, _,supportingAgent, NameSubmitter), TaskStep >= SimStep, confirmedOtherAgentAt(OffsetX, OffsetY, NameSubmitter),
			targetMd(X, Y, Target), Target \== supportingPosition),
			(_).sent(otherAgentAt(NameSubmitter, A, B, _)), bel(localize(A, B, OffsetX, OffsetY, C, D))
				then delete(targetMd(X, Y, Target)) + insert(targetMd(C, D, otherAgentAt)) + insert(executeManhattan).
	
		
} % end module