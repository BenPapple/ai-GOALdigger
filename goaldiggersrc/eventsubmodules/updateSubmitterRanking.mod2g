use "../goaldiggerProlog" as knowledge.
use "../goaldiggerAction" as actionspec.

/**
 * Handle ranking of agents and assign submitterLeader to one agent
 *
 */

module updateSubmitterRanking {
	
	% seed collision choose new seed
	forall bel(storedOtherAgentStatus(_, _, _, OtherAgentSeed, _, _, _, _)) 
		do {
	    	if bel(randomSeed(MyRandomSeed), MyRandomSeed == OtherAgentSeed) 
	    		then {
			    	if bel(getRandomNumberSeed(NewSeed)) 
			    		then delete(randomSeed(MyRandomSeed)) + 
			                 insert (randomSeed(NewSeed)).
		}
    }
	
	if percept(step(SimStep), SimStep > 9) 
		then {
		% RESET
		if bel(positionInHirarchie(PositionInHirarchie)) 
			then delete(positionInHirarchie(PositionInHirarchie)) +
		         insert(positionInHirarchie(0)).	
		
		% position in hierarchy will increase for every lower other agent's randomSeed
		forall bel(storedOtherAgentStatus(_, _, _, OtherAgentSeed, _, _, _, _)) 
			do {
			    if bel(randomSeed(MyRandomSeed), positionInHirarchie(PositionInHirarchie), 
			           MyRandomSeed > OtherAgentSeed, 
				       NewPositionInHirarchie is PositionInHirarchie + 1) 
				    then delete(positionInHirarchie(PositionInHirarchie)) + 
				         insert (positionInHirarchie(NewPositionInHirarchie)).
		}
		
		% assign submitterLeader
		if percept(teamSize(SizeTeam), name(MyName)), 
		   bel(positionInHirarchie(PositionInHirarchie), PosCheck is SizeTeam - PositionInHirarchie, PosCheck == 1)
			then insert(submitterLeader) + 
			     allother.send(msgSubmitterLeader(MyName)).
			
		%ToDo
		% assign Explorer	
%		if percept(teamSize(SizeTeam)), 
%		   bel(positionInHirarchie(PositionInHirarchie), targetRole(Role), 
%		   	   PosCheck is SizeTeam - PositionInHirarchie, PosCheck == SizeTeam)
%			then delete(targetRole(Role)) + insert(targetRole(explorer)).
			
	    % remove submitterLeader
		if percept(teamSize(SizeTeam)), 
		   bel(submitterLeader, positionInHirarchie(PositionInHirarchie), 
		       PosCheck is SizeTeam - PositionInHirarchie, PosCheck \= 1)
			then delete(submitterLeader).

		% ToDo
		% remove Explorer	
%		if percept(teamSize(SizeTeam)), 
%		   bel(positionInHirarchie(PositionInHirarchie), targetRole(Role), 
%		   	   PosCheck is SizeTeam - PositionInHirarchie, PosCheck \= SizeTeam)
%			then delete(targetRole(Role)) + insert(targetRole(worker)).
%		
	}
} % end module