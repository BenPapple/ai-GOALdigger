use "../goaldiggerProlog" as knowledge.
use "../goaldiggerAction" as actionspec.

/**
 * Store (or delete if messages get old) messages from percept into belief
 *
 */

module syncMessageDataIntoBelief {
	
	% STORE seenOtherAgent messages
	forall (_).sent(seenOtherAgentAt(OwnX, OwnY, OtherX, OtherY, Step, AgentSender)) do {
	
		if not(bel(cashedSeenOtherAgentAt(OwnX, OwnY, OtherX, OtherY, Step, AgentSender)))
			then insert(cashedSeenOtherAgentAt(OwnX, OwnY, OtherX, OtherY, Step, AgentSender)). 
		
	}
	
	% DELETE stored seenOtherAgent messages from belief when ~6 steps old
	forall bel(cashedSeenOtherAgentAt(OwnX, OwnY, OtherX, OtherY, Step, AgentSender)), percept(step(SimStep))
		do {
			if bel(cashedSeenOtherAgentAt(OwnX, OwnY, OtherX, OtherY, Step, AgentSender), Step =< SimStep - 7)
				       then delete(cashedSeenOtherAgentAt(OwnX, OwnY, OtherX, OtherY, Step, AgentSender)).
	}
	
}