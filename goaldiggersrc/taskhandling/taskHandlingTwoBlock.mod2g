use "../goaldiggerProlog" as knowledge.
use "../goaldiggerAction" as actionspec.
use "../eventsubmodules/updateDispenserData" as module.

/**
 * Use the 2-task as 2task submitterLeader
 *
 */

module taskHandlingTwoBlock {

	% choose 2-block tasks if own block fits left req fields
	if bel(haveBlockAttached(true, DirBlock), directionToCoordinate(DirBlock, A, B)), 
	   percept(thing(A, B, block, BlockTypeAttached)),
	   percept(task(TaskName ,TaskStep, 40,[req(0, 1, BlockTypeAttached),req(_, _, _)])), 
	   bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 90) 
	    then {	
	        if not(bel(calculateNewGoalzoneMD)) then insert(calculateNewGoalzoneMD).	
			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) then 
				delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
				insert(currentChosenTask(TaskName, TaskStep, 40, 0, 1, BlockTypeAttached, submittingAgentTwoTask, 
				       supporterPending)) + exit-module.
	}
	
	% choose 2-block tasks if own block fits right req fields
	if bel(haveBlockAttached(true, DirBlock), directionToCoordinate(DirBlock, A, B)), 
	   percept(thing(A, B, block, BlockTypeAttached)),
	   percept(task(TaskName ,TaskStep, 40,[req(_, _, _),req(0, 1, BlockTypeAttached)])), 
	   bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 90) 
	    then {
	        if not(bel(calculateNewGoalzoneMD)) then insert(calculateNewGoalzoneMD).		
			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) then 
				delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
				insert(currentChosenTask(TaskName, TaskStep, 40, 0, 1, BlockTypeAttached, submittingAgentTwoTask, 
				       supporterPending)) + exit-module.
	}

	% update dispenser distance as submitterLeader
	if not(bel(calculateNewDispenserMD)) then updateDispenserData.
	
	% choose 2-block tasks if it exists and nearestdispenser with right block
	if percept(task(TaskName ,TaskStep, 40,[req(Xt, Yt, BlockType),req(Xt2, Yt2, BlockType2)])), 
	   bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 90),
	   bel(targetClosestOfAllDispensersAt(_, _, BlockType, MDValue), MDValue < 1234567)
	    then {
	        if not(bel(calculateNewGoalzoneMD)) then insert(calculateNewGoalzoneMD).		
			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8), Xt == 0, Yt == 1, 
			       storedDispenser(_, _, dispenser, BlockType, _, _)) then 
				delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
				insert(currentChosenTask(TaskName, TaskStep, 40, Xt, Yt, BlockType, submittingAgentTwoTask, 
				       supporterPending)) + exit-module.
			
			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8), Xt2 == 0, Yt2 == 1, 
			       storedDispenser(_, _, dispenser, BlockType2, _, _)) then 
				delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
				insert(currentChosenTask(TaskName, TaskStep, 40, Xt2, Yt2, BlockType2, submittingAgentTwoTask, 
				       supporterPending)) + exit-module.
	}

	% choose 2-block tasks if it exists and currenttask dispenser with right block
	if percept(task(TaskName ,TaskStep, 40,[req(Xt, Yt, BlockType),req(Xt2, Yt2, BlockType2)])), 
	   bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 90),
	   bel(targetDispenserAt(_, _, BlockType, MDValue), MDValue < 1234567)
	    then {
	        if not(bel(calculateNewGoalzoneMD)) then insert(calculateNewGoalzoneMD).		
			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8), Xt == 0, Yt == 1, 
			       storedDispenser(_, _, dispenser, BlockType, _, _)) then 
				delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
				insert(currentChosenTask(TaskName, TaskStep, 40, Xt, Yt, BlockType, submittingAgentTwoTask, 
				       supporterPending)) + exit-module.
			
			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8), Xt2 == 0, Yt2 == 1, 
			       storedDispenser(_, _, dispenser, BlockType2, _, _)) then 
				delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
				insert(currentChosenTask(TaskName, TaskStep, 40, Xt2, Yt2, BlockType2, submittingAgentTwoTask, 
				       supporterPending)) + exit-module.
	}

	% choose 2-block tasks if it exists and dispenser known
	if percept(task(TaskName ,TaskStep, 40,[req(Xt, Yt, BlockType),req(Xt2, Yt2, BlockType2)])), 
	   bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 90) 
	    then {
	        if not(bel(calculateNewGoalzoneMD)) then insert(calculateNewGoalzoneMD).		
			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8), Xt == 0, Yt == 1, 
			       storedDispenser(_, _, dispenser, BlockType, _, _)) then 
				delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
				insert(currentChosenTask(TaskName, TaskStep, 40, Xt, Yt, BlockType, submittingAgentTwoTask, 
				       supporterPending)) + exit-module.
			
			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8), Xt2 == 0, Yt2 == 1, 
			       storedDispenser(_, _, dispenser, BlockType2, _, _)) then 
				delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
				insert(currentChosenTask(TaskName, TaskStep, 40, Xt2, Yt2, BlockType2, submittingAgentTwoTask, 
				       supporterPending)) + exit-module.
	} 	
	
} % end module