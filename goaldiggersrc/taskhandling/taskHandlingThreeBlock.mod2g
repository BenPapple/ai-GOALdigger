use "../goaldiggerProlog" as knowledge.
use "../goaldiggerAction" as actionspec.
use "../eventsubmodules/updateDispenserDistance" as module.

/**
 * Use the 3-task as 3task submitterLeader
 *
 * @author Ben G.
 */

module taskHandlingThreeBlock {

    % reset supporter status for multitask
	if bel(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, W18, 
	                                W19)) 
        then delete(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, 
                                             W18, W19)) +
             insert(multiTaskSupporterStatus(noTask, placeholder, placeholder, placeholder, placeholder, placeholder, 
                                             placeholder, placeholder, placeholder, placeholder, placeholder,
                                             placeholder, placeholder, placeholder, placeholder, placeholder, 
                                             placeholder, placeholder, placeholder)).

%	% choose 3-block tasks if own block fits LEFT req fields
%	if bel(haveBlockAttached(true, DirBlock), directionToCoordinate(DirBlock, A, B)), 
%	   percept(thing(A, B, block, BlockTypeAttached)),
%	   percept(task(TaskName ,TaskStep, 90,[req(0, 1, BlockTypeAttached),req(X2, Y2, BlockTypeOther),req(X3, Y3, BlockTypeOther2)])), 
%	   bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 120),
%	   bel(mapDispenser(_, _, dispenser, BlockTypeOther, _, _)),
%	   bel(mapDispenser(_, _, dispenser, BlockTypeOther2, _, _)),
%	   bel(Y2 \= 3, Y3 \= 3),
%	   bel(Calc is 0 + 1 + X2 + Y2 + X3 + Y3, Calc \= 2),
%	   bel(Calc2 is 0 - 1 + X2 - Y2 + X3 - Y3, Calc2 \= -2)
%	    then {	
%       	if bel(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, W18, W19)) 
%            then delete(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, W18, W19))
%                 + insert(multiTaskSupporterStatus(threeTask, needsupporter, placeholder, placeholder, placeholder, noack, 
%                                         placeholder, needsupporter, placeholder, placeholder, placeholder, noack, 
%                                         placeholder, placeholder, placeholder, placeholder, placeholder, placeholder, 
%                                         placeholder)).
%        if not(bel(calculateNewGoalzoneMD)) 
%        	then insert(calculateNewGoalzoneMD).	
%		if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) 
%			then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
%			     insert(currentChosenTask(TaskName, TaskStep, 90, 0, 1, BlockTypeAttached, submittingAgentThreeTask, 
%			            supporterREQPending)) + 
%			     print("ModuleChoseTask 3task own Block fits") + 
%			     exit-module.
%	}
%
%	% choose 3-block tasks if own block fits MIDDLE req fields
%	if bel(haveBlockAttached(true, DirBlock), directionToCoordinate(DirBlock, A, B)), 
%	   percept(thing(A, B, block, BlockTypeAttached)),
%	   percept(task(TaskName ,TaskStep, 90,[req(X1, Y1, BlockTypeOther),req(0, 1, BlockTypeAttached),req(X3, Y3, BlockTypeOther2)])), 
%	   bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 120),
%	   bel(mapDispenser(_, _, dispenser, BlockTypeOther, _, _)),
%	   bel(mapDispenser(_, _, dispenser, BlockTypeOther2, _, _)),
%	   bel(Y1 \= 3, Y3 \= 3),
%	   bel(Calc is X1 + Y1 + 0 + 1 + X3 + Y3, Calc \= 2),
%	   bel(Calc2 is X1 - Y1 + 0 - 1 + X3 - Y3, Calc2 \= -2)
%	    then {
%       	if bel(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, W18, W19)) 
%            then delete(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, W18, W19))
%                 + insert(multiTaskSupporterStatus(threeTask, needsupporter, placeholder, placeholder, placeholder, noack, 
%                                         placeholder, needsupporter, placeholder, placeholder, placeholder, noack, 
%                                         placeholder, placeholder, placeholder, placeholder, placeholder, placeholder, 
%                                         placeholder)).
%	        if not(bel(calculateNewGoalzoneMD)) 
%	        	then insert(calculateNewGoalzoneMD).		
%			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) 
%				then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
%				     insert(currentChosenTask(TaskName, TaskStep, 90, 0, 1, BlockTypeAttached, submittingAgentThreeTask, 
%				            supporterREQPending)) + 
%				     print("ModuleChoseTask 3task own Block fits") + 
%				     exit-module.
%	}
%	
%	% choose 3-block tasks if own block fits RIGHT req fields
%	if bel(haveBlockAttached(true, DirBlock), directionToCoordinate(DirBlock, A, B)), 
%	   percept(thing(A, B, block, BlockTypeAttached)),
%	   percept(task(TaskName ,TaskStep, 90,[req(X1, Y1, BlockTypeOther),req(X2, Y2, BlockTypeOther2),req(0, 1, BlockTypeAttached)])), 
%	   bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 120),
%	   bel(mapDispenser(_, _, dispenser, BlockTypeOther, _, _)),
%	   bel(mapDispenser(_, _, dispenser, BlockTypeOther2, _, _)),
%	   bel(Y1 \= 3, Y2 \= 3),
%	   bel(Calc is X1 + Y1 + X2 + Y2 + 0 + 1, Calc \= 2),
%	   bel(Calc2 is X1 - Y1 + X2 - Y2 + 0 - 1, Calc2 \= -2)
%	    then {
%       	if bel(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, W18, W19)) 
%            then delete(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, W18, W19))
%                 + insert(multiTaskSupporterStatus(threeTask, needsupporter, placeholder, placeholder, placeholder, noack, 
%                                         placeholder, needsupporter, placeholder, placeholder, placeholder, noack, 
%                                         placeholder, placeholder, placeholder, placeholder, placeholder, placeholder, 
%                                         placeholder)).
%	        if not(bel(calculateNewGoalzoneMD)) 
%	        	then insert(calculateNewGoalzoneMD).		
%			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) 
%				then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
%				     insert(currentChosenTask(TaskName, TaskStep, 90, 0, 1, BlockTypeAttached, submittingAgentThreeTask, 
%				            supporterREQPending)) + 
%				     print("ModuleChoseTask 3task own Block fits") + 
%				     exit-module.
%	}

	% update dispenser distance as submitterLeader
	if not(bel(calculateNewDispenserMD)) 
		then updateDispenserDistance.
	
	% choose 3-block tasks if it exists and nearestdispenser with right block LEFT req
	if percept(task(TaskName ,TaskStep, 90,[req(0, 1, BlockType),req(X2, Y2, BlockTypeOther),req(X3, Y3, 
	                BlockTypeOther2)])), 
	   bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 70),
	   bel(targetClosestOfAllDispensersAt(_, _, BlockType, _), BlockType \= bx),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther, _, _)),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther2, _, _)),
	   bel(Y2 \= 3, Y3 \= 3),
	   bel(Calc is 0 + 1 + X2 + Y2 + X3 + Y3, Calc \= 2),
	   bel(Calc2 is 0 - 1 + X2 - Y2 + X3 - Y3, Calc2 \= -2)
	    then {
       	if bel(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, W18,
       	                                W19)) 
            then delete(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, 
                                                 W17, W18, W19))
                 + insert(multiTaskSupporterStatus(threeTask, needsupporter, placeholder, placeholder, placeholder, 
                                                   noack, placeholder, needsupporter, placeholder, placeholder, 
                                                   placeholder, noack, placeholder, placeholder, placeholder, 
                                                   placeholder, placeholder, placeholder, placeholder)).
	        if not(bel(calculateNewGoalzoneMD)) 
	        	then insert(calculateNewGoalzoneMD).		
			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) 
				then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
				     insert(currentChosenTask(TaskName, TaskStep, 90, 0, 1, BlockType, submittingAgentThreeTask, 
				            supporterREQPending)) + 
				     print("ModuleChoseTask 3task nearestDispenser") + 
				     exit-module.
	}

	% choose 3-block tasks if it exists and nearestdispenser with right block MIDDLE req
	if percept(task(TaskName ,TaskStep, 90,[req(X1, Y1, BlockTypeOther),req(0, 1, BlockType),
	                                        req(X3, Y3, BlockTypeOther2)])), 
	   bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 70),
	   bel(targetClosestOfAllDispensersAt(_, _, BlockType, _), BlockType \= bx),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther, _, _)),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther2, _, _)),
	   bel(Y1 \= 3, Y3 \= 3),
	   bel(Calc is X1 + Y1 + 0 + 1 + X3 + Y3, Calc \= 2),
	   bel(Calc2 is X1 - Y1 + 0 - 1 + X3 - Y3, Calc2 \= -2)
	    then {
       	if bel(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, W18,
       	                                W19)) 
            then delete(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, 
                                                 W17, W18, W19))
                 + insert(multiTaskSupporterStatus(threeTask, needsupporter, placeholder, placeholder, placeholder, 
                                                   noack, placeholder, needsupporter, placeholder, placeholder, 
                                                   placeholder, noack, placeholder, placeholder, placeholder, 
                                                   placeholder, placeholder, placeholder, placeholder)).
	        if not(bel(calculateNewGoalzoneMD)) 
	        	then insert(calculateNewGoalzoneMD).		
			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) 
				then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
				     insert(currentChosenTask(TaskName, TaskStep, 90, 0, 1, BlockType, submittingAgentThreeTask, 
				            supporterREQPending)) + 
				     print("ModuleChoseTask 3task nearestDispenser") + 
				     exit-module.
	}
	
	% choose 3-block tasks if it exists and nearestdispenser with right block RIGHT req
	if percept(task(TaskName ,TaskStep, 90,[req(X1, Y1, BlockTypeOther),req(X2, Y2, BlockTypeOther2),
	                                        req(0, 1, BlockType)])), 
	   bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 70),
	   bel(targetClosestOfAllDispensersAt(_, _, BlockType, _), BlockType \= bx),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther, _, _)),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther2, _, _)),
	   bel(Y1 \= 3, Y2 \= 3),
	   bel(Calc is X1 + Y1 + X2 + Y2 + 0 + 1, Calc \= 2),
	   bel(Calc2 is X1 - Y1 + X2 - Y2 + 0 - 1, Calc2 \= -2)
	    then {
       	if bel(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, W18,
       	                                W19)) 
            then delete(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, 
                                                 W17, W18, W19))
                 + insert(multiTaskSupporterStatus(threeTask, needsupporter, placeholder, placeholder, placeholder, 
                                                   noack, placeholder, needsupporter, placeholder, placeholder, 
                                                   placeholder, noack, placeholder, placeholder, placeholder, 
                                                   placeholder, placeholder, placeholder, placeholder)).
	        if not(bel(calculateNewGoalzoneMD)) 
	        	then insert(calculateNewGoalzoneMD).		
			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) 
				then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
				     insert(currentChosenTask(TaskName, TaskStep, 90, 0, 1, BlockType, submittingAgentThreeTask, 
				            supporterREQPending)) + 
				     print("ModuleChoseTask 3task nearestDispenser") + 
				     exit-module.
	}

	% choose 3-block tasks if it exists and currenttask dispenser LEFT req
	if percept(task(TaskName ,TaskStep, 90,[req(0, 1, BlockType),req(X2, Y2, BlockTypeOther),
	                                        req(X3, Y3, BlockTypeOther2)])), 
	   bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 70),
	   bel(targetDispenserAt(_, _, BlockType, _), BlockType \= bx),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther, _, _)),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther2, _, _)),
	   bel(Y2 \= 3, Y3 \= 3),
	   bel(Calc is 0 + 1 + X2 + Y2 + X3 + Y3, Calc \= 2),
	   bel(Calc2 is 0 - 1 + X2 - Y2 + X3 - Y3, Calc2 \= -2)
	    then {
       	if bel(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, W18,
       	                                W19)) 
            then delete(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, 
                                                 W17, W18, W19))
                 + insert(multiTaskSupporterStatus(threeTask, needsupporter, placeholder, placeholder, placeholder, 
                                                   noack, placeholder, needsupporter, placeholder, placeholder, 
                                                   placeholder, noack, placeholder, placeholder, placeholder, 
                                                   placeholder, placeholder, placeholder, placeholder)).
	        if not(bel(calculateNewGoalzoneMD)) 
	        	then insert(calculateNewGoalzoneMD).		
			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) 
				then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
				     insert(currentChosenTask(TaskName, TaskStep, 90, 0, 1, BlockType, submittingAgentThreeTask, 
				       supporterREQPending)) + 
				     print("ModuleChoseTask 3task OldTask nearestDispenser") + 
					 exit-module.
	}

	% choose 3-block tasks if it exists and currenttask dispenser MIDDLE req
	if percept(task(TaskName ,TaskStep, 90,[req(X1, Y1, BlockTypeOther),req(0, 1, BlockType),
	                                        req(X3, Y3, BlockTypeOther2)])), 
	   bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 70),
	   bel(targetDispenserAt(_, _, BlockType, _), BlockType \= bx),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther, _, _)),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther2, _, _)),
	   bel(Y1 \= 3, Y3 \= 3),
	   bel(Calc is X1 + Y1 + 0 + 1 + X3 + Y3, Calc \= 2),
	   bel(Calc2 is X1 - Y1 + 0 - 1 + X3 - Y3, Calc2 \= -2)
	    then {
       	if bel(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, W18,
       	                                W19)) 
            then delete(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, 
                                                 W17, W18, W19))
                 + insert(multiTaskSupporterStatus(threeTask, needsupporter, placeholder, placeholder, placeholder, 
                                                   noack, placeholder, needsupporter, placeholder, placeholder, 
                                                   placeholder, noack, placeholder, placeholder, placeholder, 
                                                   placeholder, placeholder, placeholder, placeholder)).
	        if not(bel(calculateNewGoalzoneMD)) 
	        	then insert(calculateNewGoalzoneMD).		
			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) 
				then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
				     insert(currentChosenTask(TaskName, TaskStep, 90, 0, 1, BlockType, submittingAgentThreeTask, 
				            supporterREQPending)) + 
				     print("ModuleChoseTask 3task OldTask nearestDispenser") + 
				     exit-module.
	}
	
	% choose 3-block tasks if it exists and currenttask dispenser RIGHT req
	if percept(task(TaskName ,TaskStep, 90,[req(X1, Y1, BlockTypeOther),req(X2, Y2, BlockTypeOther2),
	                                        req(0, 1, BlockType)])), 
	   bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 70),
	   bel(targetDispenserAt(_, _, BlockType, _), BlockType \= bx),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther, _, _)),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther2, _, _)),
	   bel(Y1 \= 3, Y2 \= 3),
	   bel(Calc is X1 + Y1 + X2 + Y2 + 0 + 1, Calc \= 2),
	   bel(Calc2 is X1 - Y1 + X2 - Y2 + 0 - 1, Calc2 \= -2)
	    then {
       	if bel(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, W18,
       	                                W19)) 
            then delete(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, 
                                                 W17, W18, W19))
                 + insert(multiTaskSupporterStatus(threeTask, needsupporter, placeholder, placeholder, placeholder, 
                                                   noack, placeholder, needsupporter, placeholder, placeholder, 
                                                   placeholder, noack, placeholder, placeholder, placeholder, 
                                                   placeholder, placeholder, placeholder, placeholder)).
	        if not(bel(calculateNewGoalzoneMD)) 
	        	then insert(calculateNewGoalzoneMD).		
			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) 
				then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
				     insert(currentChosenTask(TaskName, TaskStep, 90, 0, 1, BlockType, submittingAgentThreeTask, 
				            supporterREQPending)) + 
				     print("ModuleChoseTask 3task OldTask nearestDispenser") + 
				     exit-module.
	}

	% choose 3-block tasks if it exists and both dispensers known LEFT req
	if percept(task(TaskName ,TaskStep, 90,[req(0, 1, BlockType),req(X2, Y2, BlockTypeOther),
	                                        req(X3, Y3, BlockTypeOther2)])), 
	   bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 70),
	   bel(mapDispenser(_, _, dispenser, BlockType, _, _)),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther, _, _)),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther2, _, _)),
	   bel(Y2 \= 3, Y3 \= 3),
	   bel(Calc is 0 + 1 + X2 + Y2 + X3 + Y3, Calc \= 2),
	   bel(Calc2 is 0 - 1 + X2 - Y2 + X3 - Y3, Calc2 \= -2)
	    then {
       	if bel(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, W18,
       	                                W19)) 
            then delete(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, 
                                                 W17, W18, W19))
                 + insert(multiTaskSupporterStatus(threeTask, needsupporter, placeholder, placeholder, placeholder, 
                                                   noack, placeholder, needsupporter, placeholder, placeholder, 
                                                   placeholder, noack, placeholder, placeholder, placeholder, 
                                                   placeholder, placeholder, placeholder, placeholder)).
	        if not(bel(calculateNewGoalzoneMD)) 
	        	then insert(calculateNewGoalzoneMD).		
			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) 
				then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
				     insert(currentChosenTask(TaskName, TaskStep, 90, 0, 1, BlockType, submittingAgentThreeTask, 
				            supporterREQPending)) + 
				     print("ModuleChoseTask 3task basic disp known") + 
				     exit-module.
	} 	

	% choose 3-block tasks if it exists and both dispensers known MIDDLE req
	if percept(task(TaskName ,TaskStep, 90,[req(X1, Y1, BlockTypeOther),req(0, 1, BlockType),
	                                        req(X3, Y3, BlockTypeOther2)])), 
	   bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 70),
	   bel(mapDispenser(_, _, dispenser, BlockType, _, _)),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther, _, _)),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther2, _, _)),
	   bel(Y1 \= 3, Y3 \= 3),
	   bel(Calc is X1 + Y1 + 0 + 1 + X3 + Y3, Calc \= 2),
	   bel(Calc2 is X1 - Y1 + 0 - 1 + X3 - Y3, Calc2 \= -2)
	    then {
       	if bel(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, W18,
       	                                W19)) 
            then delete(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, 
                                                 W17, W18, W19))
                 + insert(multiTaskSupporterStatus(threeTask, needsupporter, placeholder, placeholder, placeholder, 
                                                   noack, placeholder, needsupporter, placeholder, placeholder, 
                                                   placeholder, noack, placeholder, placeholder, placeholder, 
                                                   placeholder, placeholder, placeholder, placeholder)).
	        if not(bel(calculateNewGoalzoneMD)) 
	        	then insert(calculateNewGoalzoneMD).		
			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) 
				then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
					 insert(currentChosenTask(TaskName, TaskStep, 90, 0, 1, BlockType, submittingAgentThreeTask, 
				            supporterREQPending)) + 
				     print("ModuleChoseTask 3task basic disp known") + 
				     exit-module.
	} 

	% choose 3-block tasks if it exists and both dispensers known RIGHT req
	if percept(task(TaskName ,TaskStep, 90,[req(X1, Y1, BlockTypeOther),req(X2, Y2, BlockTypeOther2),
	                                        req(0, 1, BlockType)])), 
	   bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 70),
	   bel(mapDispenser(_, _, dispenser, BlockType, _, _)),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther, _, _)),
	   bel(mapDispenser(_, _, dispenser, BlockTypeOther2, _, _)),
	   bel(Y1 \= 3, Y2 \= 3),
	   bel(Calc is X1 + Y1 + X2 + Y2 + 0 + 1, Calc \= 2),
	   bel(Calc2 is X1 - Y1 + X2 - Y2 + 0 - 1, Calc2 \= -2)
	    then {
       	if bel(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, W17, W18,
       	                                W19)) 
            then delete(multiTaskSupporterStatus(W1, W2, W3, W4, W5, W6, W7, W8, W9, W10, W11, W12, W13, W14, W15, W16, 
                                                 W17, W18, W19))
                 + insert(multiTaskSupporterStatus(threeTask, needsupporter, placeholder, placeholder, placeholder, 
                                                   noack, placeholder, needsupporter, placeholder, placeholder, 
                                                   placeholder, noack, placeholder, placeholder, placeholder, 
                                                   placeholder, placeholder, placeholder, placeholder)).
	        if not(bel(calculateNewGoalzoneMD)) 
	        	then insert(calculateNewGoalzoneMD).		
			if bel(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) 
				then delete(currentChosenTask(V1, V2, V3, V4, V5, V6, V7, V8)) + 
					 insert(currentChosenTask(TaskName, TaskStep, 90, 0, 1, BlockType, submittingAgentThreeTask, 
				            supporterREQPending)) + 
				     print("ModuleChoseTask 3task basic disp known") + 
				     exit-module.
	} 
	
} % end module