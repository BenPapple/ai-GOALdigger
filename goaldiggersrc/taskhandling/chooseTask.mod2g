use "../goaldiggerProlog" as knowledge.
use "../goaldiggerAction" as actionspec.
use "../taskhandling/taskHandlingOneBlock" as module.
use "../taskhandling/taskHandlingTwoBlock" as module.

/**
 * Choose task from options when having corresponding role; waterfall chosing, advanced choices come first in file: first true fit gets chosen and exits module
 *
 */

module chooseTask {

	% chose 1s task if one is available
	if percept(task(_ ,TaskStep, 10,[req(_,_,_)])), bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 0) 
		then taskHandlingOneBlock.
		 
	%ToDo 2task 
	% chose 2s task if 1s task isn't available
	if bel(step(SimStep)), not(percept(task(_ ,TaskStep, 10,[req(_,_,_)]),TaskStep >= SimStep, TaskStep - SimStep >= 0)), percept(task(_ ,TaskStep, 40,[req(_,_,_),req(_,_,_)])), bel(step(SimStep), TaskStep >= SimStep, TaskStep - SimStep >= 0)  
		then taskHandlingTwoBlock.
		
} % module
